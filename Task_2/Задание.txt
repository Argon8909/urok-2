Все классы описать в разных файлах
---------------------------------
Создать родительский класс RailGunBullet - снаряд, которым может стрелять некоторый рейлган. 
У него должно быть два свойства: наносимый урон и нагрев (оба int). Создать 3 дочерних класса: плазма, неон, гвоздь. 
У каждого дочернего класса должны быть заданы урон и нагрев по умолчанию какие-то на твоё усмотрение
---------------------------------
Создать исключение OverheatException своё. Это должно быть именно исключение, 
так что если кто не помнит из лекций как это делать - надо пересмотреть лекции или погуглить
---------------------------------
Создать класс Railgun. Он обычный, не дженерик и не наследуется ни от кого. Он хранит в себе приватное поле int _heat. 
У рейлгана один метод: Shot, и метод этот дженерик. Принимать на вход он должен не любой класс, а только потомка RailGunBullet. 
На вход нет никаких параметров, но есть входной тип, ведь это дженерик. 
На выходе - урон, который был нанесён. И при этом рейлган должен сохранять и суммировать нагрев от каждой пули, каждого выстрела. 
Если нагрев больше чем 100, то выбросить исключение
---------------------------------
В классе Program.cs сделать следующее:
1) Создать объект Railgun
2) Создать метод TestRifle<T>(Railgun railgun), по поводу дженерика всё то же самое, что и у рейлгана. 
Этот метод должен иметь бесконечный цикл (любой, в т.ч. for (;;)) и в нём через трай-кетч вызывать выстрелы тем типом пуль, 
которые были переданы в его входной дженерик-параметр. А в кетч отлавливать то самое исключение о перегреве. 
Когда оно будет поймано - надо вывести в консоль суммарный урон, нанесённый ружьём до того, как у него случился перегрев, 
и сколько выстрелов было сделано
3) В методе Main создать ружьё и вызвать три раза TestRifle с тремя типами пуль. 
Оценить полученный результат: нет ли в нём багов, работает ли всё как надо? 
Предположительно будет один баг, который я специально не указал, его надо выявить и исправить (как угодно) самостоятельно